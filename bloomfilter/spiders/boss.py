# -*- coding: utf-8 -*-
import scrapy
from bloomfilter.items import BossItem
from redis_bloom.spiders import RedisSpider
from bloomfilter.utils import get_num, getVal, crate_params, MORE_PAGE

class BossSpider(RedisSpider):
    name = 'boss'
    #redis_key = 'lagou:start_urls'
    allowed_domains = ['zhipin.com']

    rule_key = "http://zhipin.com/"
  
    # if not settings, it will be redirect to login
    custom_settings = {
        "COOKIES_ENABLED": False,
        "DOWNLOAD_DELAY": 0.2,
        "CONCURRENT_REQUESTS": 32
    }

    #城市列表
    #cityList = ['101270100'] 
    cityList = ['101010100', '101020100', '101030100', '101040100', '101050100', '101050200', '101050300', '101050400', '101050500', '101050600', '101050700', '101050800', '101050900', '101051000', '101051100', '101051200', '101051300', '101060100', '101060200', '101060300', '101060400', '101060500', '101060600', '101060700', '101060800', '101060900', '101070100', '101070200', '101070300', '101070400', '101070500', '101070600', '101070700', '101070800', '101070900', '101071000', '101071100', '101071200', '101071300', '101071400', '101080100', '101080200', '101080300', '101080400', '101080500', '101080600', '101080700', '101080800', '101080900', '101081000', '101081100', '101081200', '101090100', '101090200', '101090300', '101090400', '101090500', '101090600', '101090700', '101090800', '101090900', '101091000', '101091100', '101100100', '101100200', '101100300', '101100400', '101100500', '101100600', '101100700', '101100800', '101100900', '101101000', '101101100', '101110100', '101110200', '101110300', '101110400', '101110500', '101110600', '101110700', '101110800', '101110900', '101111000', '101120100', '101120200', '101120300', '101120400', '101120500', '101120600', '101120700', '101120800', '101120900', '101121000', '101121100', '101121200', '101121300', '101121400', '101121500', '101121600', '101121700', '101130100', '101130200', '101130300', '101130400', '101130500', '101130600', '101130800', '101130900', '101131000', '101131100', '101131200', '101131300', '101131400', '101131500', '101131600', '101131700', '101131800', '101131900', '101132000', '101132100', '101132200', '101132300', '101132400', '101150100', '101150200', '101150300', '101150400', '101150500', '101150600', '101150700', '101150800', '101160100', '101160200', '101160300', '101160400', '101160500', '101160600', '101160700', '101160800', '101160900', '101161000', '101161100', '101161200', '101161300', '101161400', '101170100', '101170200', '101170300', '101170400', '101170500', '101180100', '101180200', '101180300', '101180400', '101180500', '101180600', '101180700', '101180800', '101180900', '101181000', '101181100', '101181200', '101181300', '101181400', '101181500', '101181600', '101181700', '101181800', '101190100', '101190200', '101190300', '101190400', '101190500', '101190600', '101190700', '101190800', '101190900', '101191000', '101191100', '101191200', '101191300', '101200100', '101200200', '101200300', '101200400', '101200500', '101200600', '101200700', '101200800', '101200900', '101201000', '101201100', '101201200', '101201300', '101201400', '101201500', '101201600', '101201700', '101210100', '101210200', '101210300', '101210400', '101210500', '101210600', '101210700', '101210800', '101210900', '101211000', '101211100', '101220100', '101220200', '101220300', '101220400', '101220500', '101220600', '101220700', '101220800', '101220900', '101221000', '101221100', '101221200', '101221300', '101221400', '101221500', '101221600', '101230100', '101230200', '101230300', '101230400', '101230500', '101230600', '101230700', '101230800', '101230900', '101240100', '101240200', '101240300', '101240400', '101240500', '101240600', '101240700', '101240800', '101240900', '101241000', '101241100', '101250100', '101250200', '101250300', '101250400', '101250500', '101250600', '101250700', '101250800', '101250900', '101251000', '101251100', '101251200', '101251300', '101251400', '101260100', '101260200', '101260300', '101260400', '101260500', '101260600', '101260700', '101260800', '101260900', '101270100', '101270200', '101270300', '101270400', '101270500', '101270600', '101270700', '101270800', '101270900', '101271000', '101271100', '101271200', '101271300', '101271400', '101271500', '101271600', '101271700', '101271800', '101271900', '101272000', '101272100', '101280100', '101280200', '101280300', '101280400', '101280500', '101280600', '101280700', '101280800', '101280900', '101281000', '101281100', '101281200', '101281300', '101281400', '101281500', '101281600', '101281700', '101281800', '101281900', '101282000', '101282100', '101282200', '101290100', '101290200', '101290300', '101290400', '101290500', '101290700', '101290800', '101290900', '101291000', '101291100', '101291200', '101291300', '101291400', '101291500', '101291600', '101291700', '101300100', '101300200', '101300300', '101300400', '101300500', '101300600', '101300700', '101300800', '101300900', '101301000', '101301100', '101301200', '101301300', '101301400', '101310100', '101310200', '101310300', '101310400', '101310500', '101310600', '101310700', '101310800', '101310900', '101311000', '101311100', '101311200', '101311300', '101311400', '101311500', '101311600', '101311700', '101311800', '101311900', '101341100', '101140100', '101140200', '101140300', '101140400', '101140500', '101140600', '101140700', '101320300', '101330100']

    #行业类型
    #indusList =['100020']
    indusList = ['100001', '100002', '100003', '100004', '100005', '100006', '100007', '100008', '100009', '100010', '100011', '100012', '100013', '100014', '100015', '100016', '100018', '100019', '100020', '100021', '100024', '100101', '100206', '100502', '100504', '100601', '100702', '100801', '101304']
    
    #职位类型
    #positionList = ['100103'] 
    positionList = ['100101', '100102', '100103', '100104', '100105', '100106', '100107', '100108', '100109', '100110', '100111', '100112', '100113', '100114', '100115', '100116', '100117', '100118', '100119', '100120', '100121', '100122', '100201', '100202', '100203', '100204', '100205', '100206', '100208', '100209', '100210', '100301', '100302', '100303', '100304', '100305', '100306', '100307', '100308', '100309', '100401', '100402', '100403', '100404', '100405', '100406', '100407', '100408', '100409', '100506', '100507', '100508', '100509', '100511', '100512', '100513', '100601', '100602', '100603', '100604', '100605', '100606', '100607', '100801', '100802', '100803', '100804', '100805', '100806', '100807', '100808', '100809', '100810', '100811', '100812', '100813', '100814', '100815', '100816', '100901', '100902', '100903', '100904', '101001', '101002', '101003', '101004', '101005', '101006', '101007', '101008', '101009', '101010', '101011', '101012', '101013', '101014', '101015', '101016', '101017', '101018', '101401', '101402', '101403', '101404', '100701', '100702', '100703', '100704', '100705', '100706', '100707', '101301', '101302', '101303', '101304', '101305', '101306', '101307', '101201', '101202', '101101', '110101', '110102', '110103', '110104', '110105', '110106', '110107', '110108', '110302', '110303', '110304', '110401', '120101', '120102', '120103', '120104', '120105', '120106', '120107', '120108', '120109', '120110', '120111', '120112', '120113', '120114', '120115', '120116', '120117', '120118', '120119', '120120', '120121', '120201', '120202', '120203', '120204', '120301', '120302', '120303', '120304', '120407', '120408', '120401', '120402', '120403', '120404', '120405', '120406', '120601', '120602', '120603', '120604', '120605', '120606', '120607', '120608', '120610', '120501', '130101', '130102', '130103', '130104', '130105', '130106', '130107', '130108', '130109', '130110', '130111', '130112', '130113', '130114', '130115', '130116', '130117', '130118', '130120', '130119', '130201', '130202', '130203', '130204', '130205', '130206', '130301', '130302', '130303', '130304', '130305', '130306', '130307', '130308', '130309', '130401', '130402', '130403', '130404', '130405', '130501', '140101', '140102', '140103', '140104', '140105', '140106', '140107', '140108', '140109', '140110', '140111', '140112', '140113', '140201', '140202', '140203', '140204', '140205', '140206', '140501', '140502', '140503', '140504', '140505', '140506', '140601', '140602', '140603', '140604', '140605', '140607', '140608', '140609', '140610', '140611', '140401', '140404', '140405', '140406', '140407', '140701', '150101', '150102', '150103', '150104', '150105', '150106', '150107', '150403', '150406', '150108', '150109', '150110', '150201', '150202', '150204', '150205', '150207', '150208', '150401', '150209', '150301', '150302', '150303', '150304', '150305', '150306', '150307', '150402', '150404', '150308', '150309', '150203', '150502', '150503', '150504', '150505', '150506', '150507', '150407', '150408', '150409', '150410', '150411', '150412', '150413', '150414', '150601', '140301', '140302', '140303', '140304', '140305', '140306', '140307', '140308', '140309', '140310', '140311', '140312', '140313', '140314', '140315', '140316', '140317', '140402', '140403', '160101', '160102', '160103', '160104', '160201', '170101', '170102', '170103', '170104', '170105', '170106', '170107', '170108', '170301', '170302', '170303', '170304', '170305', '170306', '170401', '170402', '170403', '170404', '170405', '170406', '170201', '170202', '170203', '170204', '170205', '170207', '170208', '170209', '170210', '170211', '170617', '170618', '170619', '170601', '170602', '170603', '170604', '170605', '170606', '170607', '170608', '170609', '170610', '170611', '170612', '170613', '170614', '170615', '170616', '170501', '180101', '180103', '180104', '180112', '180113', '180114', '180115', '180116', '180117', '180118', '180111', '180119', '180201', '180202', '180203', '180204', '180301', '180302', '180303', '180304', '180401', '180102', '180402', '180403', '180404', '180105', '180405', '180406', '180107', '180501', '180502', '180503', '180504', '180505', '180106', '180506', '180108', '180109', '180110', '180701', '180702', '180703', '180601', '180801', '180802', '230101', '230102', '230103', '230104', '230105', '230106', '230107', '230108', '230110', '230109', '230201', '230202', '230203', '230204', '230205', '230206', '230207', '230208', '230209', '230210', '230211', '230212', '230301', '190101', '190102', '190103', '190104', '190105', '190107', '190106', '190201', '190202', '190203', '190204', '190301', '190302', '190303', '190304', '190305', '190306', '190307', '190308', '190309', '190310', '190311', '190312', '190313', '190401', '190402', '190403', '190404', '190405', '190406', '190407', '190408', '190409', '190410', '190411', '190501', '190502', '190503', '190504', '190601', '190602', '190603', '190701', '190702', '190703', '190704', '190705', '190706', '190707', '190801', '210801', '210802', '210803', '210112', '210113', '210114', '210115', '210116', '210117', '210118', '210119', '210120', '210121', '210122', '210101', '210102', '210103', '210104', '210105', '210106', '210108', '210109', '210110', '210111', '210107', '210202', '210201', '210301', '210302', '210303', '210304', '210305', '210401', '210402', '210403', '210404', '210405', '210506', '210501', '210502', '210503', '210504', '210505', '210601', '210602', '210603', '210604', '210605', '210606', '210701', '250101', '250102', '250103', '250104', '250105', '250106', '250107', '250201', '250202', '250203', '250204', '250301', '240101', '240102', '240103', '240104', '240105', '240106', '240107', '240108', '240109', '240110', '240111', '240112', '240113', '240114', '240115', '240116', '240117', '240201', '240202', '240203', '240204', '240205', '240206', '240301', '240302', '240303', '240304', '240401', '240402', '240501', '220101', '220102', '220103', '220201', '220202', '220203', '220204', '220205', '220206', '220207', '220208', '220209', '220210', '220211', '220212', '220301', '220302', '220303', '220401', '220402', '220403', '220501', '220502', '220503', '220504', '220505', '220601', '260101', '260102', '260103', '260104', '260105', '260106', '260107', '260108', '260109', '260110', '260201', '260202', '260301', '260302', '260303', '260304', '260305', '260306', '260307', '260308', '260401', '260402', '260403', '260404', '260501', '270101', '270102', '270103', '270201', '280101', '280102', '280103', '280104', '280105', '280201', '280202', '280301', '290101', '290102', '290103', '290104', '290201', '290202', '290203', '290204', '290205', '290206', '290207', '290301', '290302', '290303', '290304', '290401', '300101', '300102', '300103', '300104', '300105', '300106', '300107', '300108', '300201', '300202', '300203', '300204', '300205', '300206', '300207', '300301', '300302', '300303', '300304', '300305', '300306', '300307', '300308', '300309', '300310', '300311', '300312', '300313', '300314', '300315', '300316', '300317', '300401', '300402', '300403', '300404', '300405', '300406', '300501', '300502', '300503', '300504', '300505', '300506', '300507', '300508', '300509', '300510', '300601', '300602', '300603', '300604', '300605', '300606', '300608', '300609', '300610', '300611', '300612', '300613', '300614', '300615', '300616', '300617', '300618', '300619', '300620', '300621', '300622', '300623', '300624', '300625', '300626', '300627', '300628', '300701', '200101']

    #热门城市
    hotCityList = ['100010000', '101010100', '101020100', '101280100', '101280600', '101210100', '101030100', '101110100', '101190400', '101200100', '101230200', '101250100', '101270100']

    #生成基于 不同城市,行业和技术类型 boss限制到了10页
    def parse(self, response):
 
        #print('90909090')
        #base_url_hot = 'https://www.zhipin.com/i%s-c%s-p%s/h_%s/?page=%s'

        for indusId in self.indusList:
            for cityId in self.cityList:
                if cityId in self.hotCityList:
                    #热门
                    for posId in self.positionList:
                        for pg in range(1, 11):
                            full_url = self.rule_key + crate_params('0', (indusId,cityId,posId,cityId, pg))
                            #full_url = base_url_hot % (indusId,cityId,posId,cityId, pg)
                            #print(full_url)
                            #print(scrapy.Request(full_url,callback=self.parse_list,priority=1))
                            if pg < 2 :
                                yield scrapy.Request(full_url,callback=self.parse_list,dont_filter=True,priority=2)
                            elif MORE_PAGE:
                                yield scrapy.Request(full_url,callback=self.parse_list,priority=1)
                            else:
                                break
                                

                else:
                    #其他城市
                    for pg in range(1, 11):
                        full_url = self.rule_key + crate_params('1', (indusId,cityId,cityId, pg))
                        if pg < 2 :
                            yield scrapy.Request(full_url,callback=self.parse_list,dont_filter=True,priority=2)
                        elif MORE_PAGE:
                            yield scrapy.Request(full_url,callback=self.parse_list,priority=1)
                        else:
                            break




    #解析列表
    def parse_list(self, response):
        #职位链接列表
        posi_list = response.xpath('//div[@class="info-primary"]/h3/a/@href').extract()

        if posi_list:
            print "=====>i get page list"
            for posi in posi_list:
                posi = self.rule_key + crate_params('2', (get_num(posi),))
                yield scrapy.Request(posi,callback=self.parse_item,priority=3)
        else:
            print "=====>i didnt get any page list"

    #解析详情
    def parse_item(self, response):
        item = BossItem()

        # 公司名称
        co_name =  response.xpath("//div[@class='job-sec']/div[@class='name']/text()").extract()[0].encode('utf-8')

        # 职位名称
        name =  response.xpath("//div[@class='name'][1]/h1/text()").extract()[0].encode('utf-8')
        # 薪资
        salary = response.xpath("//div[@class='name'][1]/span/text()").extract()[0].encode('utf-8')

        subTitle = response.xpath("//div[@class='job-primary detail-box']/div[2]/p/text()").extract()
        # 区域
        area =  subTitle[0].split(u'：')[1].encode('utf-8')
        # 工作年限
        exp = subTitle[1].split(u'：')[1].encode('utf-8')
        # 学历
        edu = subTitle[2].split(u'：')[1].encode('utf-8')


        # 发布时间
        time = response.xpath("//span[@class='time'][1]/text()").extract()[0].replace(u'发布于','')
        time = getVal(time)

        # 职位描述
        info = response.xpath("//div[@class='job-sec']/div[@class='text']/text()").extract()
        info = getVal(info)
        if info != '':
            info =   '\n'.join(info).encode('utf-8')

        # 工作地点
        local = response.xpath("//div[@class='location-address']/text()").extract()[0].encode('utf-8')

        # 公司福利
        welfare = ''
        # 公司网址
        co_url = response.xpath("//a[@ka='job-cominfo']/@href").extract()[0].encode('utf-8')
        # 招聘人数
        num = '0'
        # 公司类别
        co_type = response.xpath("//li[@class='company-type']/text()").extract()[0].encode('utf-8')

        #识别id
        try:
            target_id = get_num(response.xpath("//link[@rel='alternate']/@href").extract()[0])
        except:
            target_id = ''

        #print name,co_name,area,salary,exp,edu,num,time,welfare,info,local,co_url,co_type
        item['name'] = name
        item['co_name'] = co_name
        item['area'] = area
        item['salary'] = salary
        item['exp'] = exp
        item['edu'] = edu
        item['num'] = num
        item['time'] = time
        item['welfare'] = welfare
        item['info'] = info
        item['local'] = local
        item['co_url'] = co_url
        item['co_type'] = co_type
        item['spider_name'] = 'boss'
        item['otherq'] = ''
        item['target_id'] = target_id


        yield item

